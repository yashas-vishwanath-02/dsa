import java.util.PriorityQueue;

public class KthLargestElement {
    
    public static int findKthLargest(int[] nums, int k) {
        // Create a min-heap (priority queue)
        PriorityQueue<Integer> minHeap = new PriorityQueue<>();
        
        // Add elements to the heap
        for (int num : nums) {
            minHeap.add(num);
            // If the size of the heap exceeds k, remove the smallest element
            if (minHeap.size() > k) {
                minHeap.poll();
            }
        }
        
        // The root of the heap is the k-th largest element
        return minHeap.peek();
    }
    
    public static void main(String[] args) {
        int[] nums = {3, 2, 1, 5, 6, 4};
        int k = 2;
        
        int result = findKthLargest(nums, k);
        System.out.println("The " + k + "-th largest element is: " + result);
    }
}
